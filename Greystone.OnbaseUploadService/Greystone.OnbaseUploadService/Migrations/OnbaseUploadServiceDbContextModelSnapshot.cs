// <auto-generated />
using System;
using Greystone.OnbaseUploadService.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Greystone.OnbaseUploadService.Migrations
{
    [DbContext(typeof(OnbaseUploadServiceDbContext))]
    partial class OnbaseUploadServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Greystone.OnbaseUploadService.Database.Models.UploadFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Chunked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UploadTaskId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UploadTaskId");

                    b.ToTable("UploadFiles");
                });

            modelBuilder.Entity("Greystone.OnbaseUploadService.Database.Models.UploadTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("FileCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JsonDocumentIndex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UploadTasks");
                });

            modelBuilder.Entity("Greystone.OnbaseUploadService.Database.Models.UploadFile", b =>
                {
                    b.HasOne("Greystone.OnbaseUploadService.Database.Models.UploadTask", "UploadTask")
                        .WithMany()
                        .HasForeignKey("UploadTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UploadTask");
                });
#pragma warning restore 612, 618
        }
    }
}
